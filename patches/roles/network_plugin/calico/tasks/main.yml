- name: 'addons | create kubernetes-apps dir'
  file:
    path: "{{ kube_config_dir }}/kubernetes-apps"
    state: directory
    mode: 0755

- name: Calico | Copy calicoctl binary from download dir
  copy:
    src: "{{ local_release_dir }}/calicoctl"
    dest: "{{ bin_dir }}/calicoctl"
    mode: 0755
    remote_src: yes

- name: Calico | Copy ServiceAccount-patch.yaml
  copy:
    src: ServiceAccount-patch.yaml
    dest: "{{ kube_config_dir }}/ServiceAccount-patch.yaml"

- name: Calico | copy calico manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kube_config_dir }}/{{ item.file }}"
    mode: 0644
  with_items:
    - {name: kubernetes-services-endpoint, file: kubernetes-services-endpoint.yml, type: cm }
    - {name: felix-configuration, file: felix-configuration.yml, type: dp}
  register: calico_node_manifests

- name: 'addons | download helm charts'
  ansible.builtin.get_url:
    url: "{{ files_repo }}/github.com/projectcalico/calico/releases/download/{{ calico_version }}/tigera-operator-{{ calico_version }}.tgz"
    dest: "{{ kube_config_dir }}/kubernetes-apps"
    mode: '0440'

- name: Kubernetes Apps | copy helm values file
  become: yes
  template:
    src: "{{ calico_name }}.values.yml.j2"
    dest: "{{ kube_config_dir }}//kubernetes-apps/{{ calico_name }}.values.yml"
    mode: 0644

- name: "addons | apply kubernetes-services-endpoint"
  kube:
    state: latest
    kubectl: "{{ bin_dir }}/kubectl"
    filename: "{{ kube_config_dir }}/{{ item }}"
  with_items:
    - kubernetes-services-endpoint.yml

- name: 'addons | install calico helm charts'
  kubernetes.core.helm:
    name: "{{ calico_name }}"
    chart_ref: "{{ kube_config_dir }}/kubernetes-apps/tigera-operator-{{ calico_version }}.tgz"
    namespace: '{{ calico_namespace }}'
    create_namespace: true
    state: present
    values_files: "{{ kube_config_dir }}//kubernetes-apps/{{ calico_name }}.values.yml"

- name: waiting operator
  shell: "{{ bin_dir }}/kubectl -n calico-apiserver rollout status deploy/calico-apiserver"
  register: deploy_status
  until: deploy_status.stdout.find("successfully") != -1
  retries: 15
  delay: 20
  ignore_errors: true
  when:
    - inventory_hostname == groups['kube_control_plane'][0]

- name: apply felix-configuration
  shell: "{{ bin_dir }}/kubectl apply -f {{ kube_config_dir }}/{{ item }}"
  with_items:
    - felix-configuration.yml

- name: apply ServiceAccount-patch
  shell: "{{ bin_dir }}/kubectl apply -f {{ kube_config_dir }}/{{ item }}"
  with_items:
    - ServiceAccount-patch.yaml
