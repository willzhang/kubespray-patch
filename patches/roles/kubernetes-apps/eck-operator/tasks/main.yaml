- name: install app
  block:
    - name: "addons | create kubernetes-apps dir"
      file:
        path: "{{ kube_config_dir }}/kubernetes-apps"
        state: directory
        mode: 0755

    - name: 'addons | download helm charts'
      ansible.builtin.get_url:
        url: "{{ files_repo }}/helm.elastic.co/helm/eck-operator/eck-operator-{{ app_version }}.tgz"
        dest: "{{ kube_config_dir }}/kubernetes-apps"
        mode: '0440'

    - name: "addons | copy yaml files"
      template:
        src: "{{ item }}.j2"
        dest: "{{ kube_config_dir }}/kubernetes-apps/{{ item }}"
      loop:
        - "{{ app_name }}.values.yaml"
        - filebeat_no_autodiscover.yaml
        - eck_secret.yaml

    - name: 'addons | install {{ app_name }} helm charts'
      kubernetes.core.helm:
        name: '{{ app_name }}'
        chart_ref: "{{ kube_config_dir }}/kubernetes-apps/eck-operator-{{ app_version }}.tgz"
        release_namespace: '{{ app_namespace }}'
        create_namespace: true
        values_files: "{{ kube_config_dir }}//kubernetes-apps/{{ app_name }}.values.yaml"
        wait: yes
 
    - name: "addons | apply yamls"
      kube:
        kubectl: "{{ bin_dir }}/kubectl"
        filename: "{{ item }}"
        namespace: "{{ app_namespace }}"
        state: latest
      with_items:
        - "{{ kube_config_dir }}/kubernetes-apps/eck_secret.yaml"
        - "{{ kube_config_dir }}/kubernetes-apps/filebeat_no_autodiscover.yaml"

  when:
    - uninstall is undefined
    - inventory_hostname == groups["kube_control_plane"][0]

- name: uninstall app
  block:
    - name: uninstall eck cluster
      kube:
        state: absent
        filename: "{{ item }}"
      with_items:
        - "{{ kube_config_dir }}/kubernetes-apps/filebeat_no_autodiscover.yaml"
        - "{{ kube_config_dir }}/kubernetes-apps/eck_secret.yaml"

    - name: uninstall eck operator
      kubernetes.core.helm:
        name: "{{ app_name }}"
        namespace: '{{ app_namespace }}'
        state: absent

  when:
    - uninstall is defined
    - inventory_hostname == groups["kube_control_plane"][0]
